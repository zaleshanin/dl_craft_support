.apply(function () {
    if(.tmp.craft==null) .tmp.craft = .Map();
    if(.tmp.craft.logging==null) .tmp.craft.logging = .Map();
    this = .tmp.craft.logging;
    
    //всякие переменные для скрипта
    TreeLog = .get_obj_index(28037); //бревно - результат рубки
    
    //топор, и его onUse, postUse
    var Axe;
    Axe = .get_obj_index(6000);
    Axe.onUse = function (axe, ch, str) {
        if(ch.start_logging!=null) ch.start_logging = null;

        //уже рубим - прекращаем
        if(ch.logging!=null) {ch.logging=null;return true;}

        //не лес/всё вырубили
        if(ch.in_room.sector_type!=.tables.sector_table.forest) {
            ch.act('Здесь нечего рубить. Ты с сожалением вздыхаешь.');
            ch.recho("%1$^C1 с сожалением вздыхает держа в руках %2$O4.", ch, axe);
            return true;
        }

        //не в инвентаре
        if(axe.getCarrier()!=ch) {
            ch.act('Возможно %1$O4 следует поднять.', axe);
            ch.recho("%1$^C1 дотрагивается до %2$O2.", ch, axe);
            return true;
        }

        //не вооружен
        if(axe.wear_loc!='wield') {
            ch.act('%1$^O5 следует вооружиться.', axe);
            return true;
        }

        //2DO не стоишь
        //2DO дерёшься

        ch.start_logging = true;

        return true;
    };
    Axe.postUse = function(axe, ch, str) {
        try{
            if(.tmp.craft.logging==null) {
                ch.act('Ты собирал%Gось|ся|ась срубить дерево, но что-то пошло не так.',ch);
                throw "logging: no .tmp.craft.logging";
            }
            this = .tmp.craft.logging;

            if(ch.start_logging==null) return;
            else ch.start_logging=null;

            //2DO проверяем/генерим деревца.
            //2DO и вдруг... ЭНТ!
            //2DO начинаем рубить
            ch.act('Начинаем производственную гимнастику!');
            ch.logging=true;
            var chopsCount; chopsCount = getChopsCount(ch);
            var sleepInterval; sleepInterval = getSleepInterval(ch);
            for (i = 0; i < chopsCount; i = i + 1) {
                sleepRoom(sleepInterval,ch);
                ch.act('Ты фигачишь %O5 по дереву!', axe);
                //2DO отнимаем ману
                //2DO наносим повреждением лесопосадкам
            }
            ch.act('Закончили упражнение!');
            if(isLoggingSuccessful(ch)) {
                ch.in_room.echo('Дерево с грохотом падает, превращаясь в качественное бревно!');
                logToRoom(ch);
            } else {
                ch.in_room.echo('Изрубленное в капусту дерево, падая превращается в труху!');
            }
        }catch(e){
            catchMsg(e);
        }
        ch.logging=null;
    };

    //Всякие вспомонательные функции:

    //возвращает количество циклов рубки от одного use
    getChopsCount = function(ch) {
        var result;
        result = 20;
        if(.buildplot) result = result/5;
        
        //2DO наличие скилла (result=result-(result/4))

        //2DO наличие механика (result=result/2)

        return result;
    };

    getSleepInterval = function(ch) {
        var result;
        result = 4;

        if(.buildplot) result=result/2;

        //2DO наличие хасты (result=result/2);

        //2DO наличие механика (result=result/2);

        return result;
    };

    sleepRoom = function(seconds, ch) {
        var room;
        room = ch.in_room;

        var i;
        for(i = 0; i < seconds*4; i = i + 1) {
            .scheduler.sleep(1);
            //помер
            if (ch.dead)
                throw "sleep: ch is dead";
            //покинул комнату
            if (room != ch.in_room){
                ch.act("Ты прекращаешь рубить дерево.");
                room.ppl.sub(ch).call.act("%1$^C1 прекращает рубить дерево.", ch);
                throw "sleep: ch left the room";
            }
            //больше не стоим
            if (!(ch.position&.tables.position_table.stand)) {
                ch.act("Ты не можешь продолжать рубить дерево.");
                ch.recho("%1$^C1 прекращает рубить дерево.", ch);
                throw "sleep: ch not standing";
            }
            //передумал
            if(ch.logging==null) {
                ch.act("Ты бросаешь это тоскливое занятие.");
                ch.recho("%1$^C1 решил прекратить рубить дерево.", ch);
                throw "sleep: second axe use(???)";
            }
            //2DO закончились мувы
            //2DO в комнате закончились деревья
            //2DO изчез топор в руках
            

        }
    };
    isLoggingSuccessful = function(ch) {
        var limit;
        limit = 4;
        //2DO skill (limit=limit-2)
        //2DO mechanic  (limit=1)
        if(.buildplot) limit=2;
        if(.number_range(1,limit)!=1) return false;
        return true;
    };

    logToRoom = function(ch) {
        //ch.in_room.echo('...но оно бесследно изчезает!');
        TreeLog.create().obj_to_room(ch.in_room);
    };

    
    catchMsg = function(e) {
        var ch;
        ch = .get_char_world('Zaleshanin');
        if(ch==null)
            ch = .get_char_world('Miyamoto');

        if(ch!=null)
            ch.ptc('logging: '+e);
        else
            .print('logging: '+e);
    };
   


})
